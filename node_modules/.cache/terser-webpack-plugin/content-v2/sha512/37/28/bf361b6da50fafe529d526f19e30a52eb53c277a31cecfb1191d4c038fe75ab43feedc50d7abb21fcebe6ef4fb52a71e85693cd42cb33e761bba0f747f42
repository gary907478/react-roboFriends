{"map":"{\"version\":3,\"sources\":[\"/Users/cloudz404/Desktop/robofriends/src/Card.js\",\"/Users/cloudz404/Desktop/robofriends/src/CardList.js\",\"/Users/cloudz404/Desktop/robofriends/src/robots.js\",\"/Users/cloudz404/Desktop/robofriends/src/App.js\",\"/Users/cloudz404/Desktop/robofriends/src/serviceWorker.js\",\"/Users/cloudz404/Desktop/robofriends/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"id\",\"name\",\"email\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"concat\",\"alt\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"src_Card\",\"key\",\"username\",\"App\",\"React\",\"src_CardList\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"oIAceA,QAZF,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACrB,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,oDACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAG,wBAAAC,OAA0BR,EAA1B,YAAwCS,IAAI,WACpDN,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAKJ,GACLE,EAAAC,EAAAC,cAAA,IAAA,KAAIH,OCcLQ,EAnBE,SAAAX,GAAc,IAAZY,EAAYZ,EAAZY,OAEf,OACIR,EAAAC,EAAAC,cAAA,MAAA,KACIM,EAAOC,IAAI,SAACC,EAAKC,GACb,OACIX,EAAAC,EAAAC,cAACU,EAAD,CACAC,IAAOF,EACPd,GAAIW,EAAOG,GAAGd,GACdC,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,YCbxBS,EAAS,CACpB,CACEX,GAAI,EACJC,KAAM,gBACNgB,SAAU,OACVf,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,eACNgB,SAAU,YACVf,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,mBACNgB,SAAU,WACVf,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,mBACNgB,SAAU,WACVf,MAAO,6BAET,CACEF,GAAI,EACJC,KAAM,mBACNgB,SAAU,SACVf,MAAO,4BAET,CACEF,GAAI,EACJC,KAAM,uBACNgB,SAAU,mBACVf,MAAO,2BAET,CACEF,GAAI,EACJC,KAAM,kBACNgB,SAAU,eACVf,MAAO,0BAET,CACEF,GAAI,EACJC,KAAM,2BACNgB,SAAU,gBACVf,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,kBACNgB,SAAU,WACVf,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNgB,SAAU,iBACVf,MAAO,2BCjDIgB,EANH,WACR,OACIC,MAAAd,cAACe,EAAD,CAAUT,OAAUA,KCMRU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECTNC,EAAAA,EAASC,OACLxB,EAAAC,EAAAC,cAACuB,EAAD,MAAUC,SAASC,eAAe,SDuHhC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Card = ({id, name, email}) =>{\\n    return(\\n        <div className=\\\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\\\">\\n            <img src={`https://robohash.org/${id}?200x200`} alt=\\\"robots\\\"/>\\n            <div>\\n                <h2>{name}</h2>\\n                <p>{email}</p>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({robots}) => {\\n\\n    return(\\n        <div>{\\n            robots.map((user,i) => {\\n                return (\\n                    <Card \\n                    key = {i} \\n                    id={robots[i].id} \\n                    name={robots[i].name} \\n                    email={robots[i].email}\\n                    />\\n                );\\n            })\\n        }\\n        </div>\\n    );\\n}\\n\\nexport default CardList;\",\"export const robots = [\\n  {\\n    id: 1,\\n    name: 'Leanne Graham',\\n    username: 'Bret',\\n    email: 'Sincere@april.biz'\\n  },\\n  {\\n    id: 2,\\n    name: 'Ervin Howell',\\n    username: 'Antonette',\\n    email: 'Shanna@melissa.tv'\\n  },\\n  {\\n    id: 3,\\n    name: 'Clementine Bauch',\\n    username: 'Samantha',\\n    email: 'Nathan@yesenia.net'\\n},\\n  {\\n    id: 4,\\n    name: 'Patricia Lebsack',\\n    username: 'Karianne',\\n    email: 'Julianne.OConner@kory.org'\\n  },\\n  {\\n    id: 5,\\n    name: 'Chelsey Dietrich',\\n    username: 'Kamren',\\n    email: 'Lucio_Hettinger@annie.ca'\\n  },\\n  {\\n    id: 6,\\n    name: 'Mrs. Dennis Schulist',\\n    username: 'Leopoldo_Corkery',\\n    email: 'Karley_Dach@jasper.info'\\n  },\\n  {\\n    id: 7,\\n    name: 'Kurtis Weissnat',\\n    username: 'Elwyn.Skiles',\\n    email: 'Telly.Hoeger@billy.biz'\\n  },\\n  {\\n    id: 8,\\n    name: 'Nicholas Runolfsdottir V',\\n    username: 'Maxime_Nienow',\\n    email: 'Sherwood@rosamond.me'\\n  },\\n  {\\n    id: 9,\\n    name: 'Glenna Reichert',\\n    username: 'Delphine',\\n    email: 'Chaim_McDermott@dana.io'\\n  },\\n  {\\n    id: 10,\\n    name: 'Clementina DuBuque',\\n    username: 'Moriah.Stanton',\\n    email: 'Rey.Padberg@karina.biz'\\n  }\\n];\\n\",\"import Reack from 'react';\\nimport CardList from './CardList';\\nimport {robots} from './robots';\\n\\nconst App = () => {\\n    return(\\n        <CardList robots = {robots}/>\\n    );\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\n// import Card from './Card';\\nimport App from './App'\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\nimport {robots} from './robots';\\n\\nReactDOM.render( \\n    <App /> , document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,n,a){\"use strict\";a.r(n);var i=a(0),r=a.n(i),t=a(2),o=a.n(t),m=(a(9),function(e){var n=e.id,a=e.name,i=e.email;return r.a.createElement(\"div\",{className:\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{src:\"https://robohash.org/\".concat(n,\"?200x200\"),alt:\"robots\"}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,a),r.a.createElement(\"p\",null,i)))}),l=function(e){var n=e.robots;return r.a.createElement(\"div\",null,n.map(function(e,a){return r.a.createElement(m,{key:a,id:n[a].id,name:n[a].name,email:n[a].email})}))},s=[{id:1,name:\"Leanne Graham\",username:\"Bret\",email:\"Sincere@april.biz\"},{id:2,name:\"Ervin Howell\",username:\"Antonette\",email:\"Shanna@melissa.tv\"},{id:3,name:\"Clementine Bauch\",username:\"Samantha\",email:\"Nathan@yesenia.net\"},{id:4,name:\"Patricia Lebsack\",username:\"Karianne\",email:\"Julianne.OConner@kory.org\"},{id:5,name:\"Chelsey Dietrich\",username:\"Kamren\",email:\"Lucio_Hettinger@annie.ca\"},{id:6,name:\"Mrs. Dennis Schulist\",username:\"Leopoldo_Corkery\",email:\"Karley_Dach@jasper.info\"},{id:7,name:\"Kurtis Weissnat\",username:\"Elwyn.Skiles\",email:\"Telly.Hoeger@billy.biz\"},{id:8,name:\"Nicholas Runolfsdottir V\",username:\"Maxime_Nienow\",email:\"Sherwood@rosamond.me\"},{id:9,name:\"Glenna Reichert\",username:\"Delphine\",email:\"Chaim_McDermott@dana.io\"},{id:10,name:\"Clementina DuBuque\",username:\"Moriah.Stanton\",email:\"Rey.Padberg@karina.biz\"}],c=function(){return React.createElement(l,{robots:s})};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(10);o.a.render(r.a.createElement(c,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},3:function(e,n,a){e.exports=a(11)},9:function(e,n,a){}},[[3,1,2]]]);","extractedComments":[]}